{"version":3,"sources":["constants/noteConstants.js","constants/userConstants.js","store.js","reducers/noteReducers.js","reducers/userReducers.js","actions/noteActions.js","actions/userActions.js","components/Navbar.js","components/Note.js","components/AddNote.js","components/DeletePopup.js","components/EditNote.js","components/Loader.js","components/Error.js","screens/HomeScreen.js","screens/LoginScreen.js","screens/RegisterScreen.js","App.js","reportWebVitals.js","index.js"],"names":["NOTE_LIST_REQUEST","NOTE_LIST_SUCCESS","NOTE_LIST_FAIL","NOTE_ADD_REQUEST","NOTE_ADD_SUCCESS","NOTE_ADD_FAIL","NOTE_COMPLETE_REQUEST","NOTE_COMPLETE_SUCCESS","NOTE_COMPLETE_FAIL","NOTE_TO_DELETE_REQUEST","NOTE_TO_DELETE_SUCCESS","NOTE_TO_DELETE_FAIL","NOTE_DELETE_REQUEST","NOTE_DELETE_SUCCESS","NOTE_DELETE_FAIL","NOTE_TO_EDIT_REQUEST","NOTE_TO_EDIT_SUCCESS","NOTE_TO_EDIT_FAIL","NOTE_EDIT_REQUEST","NOTE_EDIT_SUCCESS","NOTE_EDIT_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","reducer","combineReducers","noteList","state","notes","action","type","loading","payload","error","noteAdd","success","note","noteComplete","noteToDelete","noteDelete","noteToEdit","noteToEditObj","noteEdit","userLogin","userInfo","userRegister","intialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","listNotes","dispatch","getState","a","config","headers","Authorization","access","axios","get","data","response","message","setNoteToDelete","note_id","setNoteToEdit","note_content","note_important","note_completed","login","username","password","post","setItem","stringify","Navbar","useDispatch","className","href","class","onClick","removeItem","Note","setQuery","query","deleteOpen","setDeleteOpen","editOpen","setEditOpen","id","completeHandler","put","completeNote","important","content","completed","AddNote","addOpen","setAddOpen","useState","setNote","setImportant","emptyNote","setEmptyNote","onSubmit","e","preventDefault","length","addNote","rows","maxLength","placeholder","value","onChange","target","DeletePopup","delete","user","deleteNote","EditNote","setContent","setCompleted","console","log","editNote","defaultChecked","Loader","Error","HomeScreen","history","useSelector","useEffect","push","map","LoginScreen","setUsername","setPassword","to","RegisterScreen","repeatPassword","setRepeatPassword","passwordIssue","setPasswordIssue","registerError","register","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f3e8bf6a.chunk.js","sourcesContent":["export const NOTE_LIST_REQUEST = 'NOTE_LIST_REQUEST'\nexport const NOTE_LIST_SUCCESS = 'NOTE_LIST_SUCCESS'\nexport const NOTE_LIST_FAIL = 'NOTE_LIST_FAIL'\n\nexport const NOTE_ADD_REQUEST = 'NOTE_ADD_REQUEST'\nexport const NOTE_ADD_SUCCESS = 'NOTE_ADD_SUCCESS'\nexport const NOTE_ADD_FAIL = 'NOTE_ADD_FAIL'\n\nexport const NOTE_COMPLETE_REQUEST = 'NOTE_COMPLETE_REQUEST'\nexport const NOTE_COMPLETE_SUCCESS = 'NOTE_COMPLETE_SUCCESS'\nexport const NOTE_COMPLETE_FAIL = 'NOTE_COMPLETE_FAIL'\n\nexport const NOTE_TO_DELETE_REQUEST = 'NOTE_TO_DELETE_REQUEST'\nexport const NOTE_TO_DELETE_SUCCESS = 'NOTE_TO_DELETE_SUCCESS'\nexport const NOTE_TO_DELETE_FAIL = 'NOTE_TO_DELETE_FAIL'\n\nexport const NOTE_DELETE_REQUEST = 'NOTE_DELETE_REQUEST'\nexport const NOTE_DELETE_SUCCESS = 'NOTE_DELETE_SUCCESS'\nexport const NOTE_DELETE_FAIL = 'NOTE_DELETE_FAIL'\n\nexport const NOTE_TO_EDIT_REQUEST = 'NOTE_TO_EDIT_REQUEST'\nexport const NOTE_TO_EDIT_SUCCESS = 'NOTE_TO_EDIT_SUCCESS'\nexport const NOTE_TO_EDIT_FAIL = 'NOTE_TO_EDIT_FAIL'\n\nexport const NOTE_EDIT_REQUEST = 'NOTE_EDIT_REQUEST'\nexport const NOTE_EDIT_SUCCESS = 'NOTE_EDIT_SUCCESS'\nexport const NOTE_EDIT_FAIL = 'NOTE_EDIT_FAIL'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\n\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { noteListReducer, noteAddReducer, noteCompleteReducer, noteToDeleteReducer, noteDeleteReducer, noteToEditReducer, noteEditReducer } from './reducers/noteReducers'\nimport { userLoginReducer, userRegisterReducer } from './reducers/userReducers'\n\nconst reducer = combineReducers({\n    noteList: noteListReducer,\n    noteAdd: noteAddReducer,\n    noteComplete: noteCompleteReducer,\n    noteToDelete: noteToDeleteReducer,\n    noteDelete: noteDeleteReducer,\n    noteToEdit: noteToEditReducer,\n    noteEdit: noteEditReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n})\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst intialState = {\n    userLogin: { userInfo: userInfoFromStorage }\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, intialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store","import {\n    NOTE_LIST_REQUEST,\n    NOTE_LIST_SUCCESS,\n    NOTE_LIST_FAIL,\n\n    NOTE_ADD_REQUEST,\n    NOTE_ADD_SUCCESS,\n    NOTE_ADD_FAIL,\n\n    NOTE_COMPLETE_REQUEST,\n    NOTE_COMPLETE_SUCCESS,\n    NOTE_COMPLETE_FAIL,\n\n    NOTE_TO_DELETE_REQUEST,\n    NOTE_TO_DELETE_SUCCESS,\n    NOTE_TO_DELETE_FAIL,\n\n    NOTE_DELETE_REQUEST,\n    NOTE_DELETE_SUCCESS,\n    NOTE_DELETE_FAIL,\n\n    NOTE_TO_EDIT_REQUEST,\n    NOTE_TO_EDIT_SUCCESS,\n    NOTE_TO_EDIT_FAIL,\n\n    NOTE_EDIT_REQUEST,\n    NOTE_EDIT_SUCCESS,\n    NOTE_EDIT_FAIL\n} from '../constants/noteConstants'\n\nexport const noteListReducer = (state={ notes:[] }, action) => {\n    switch(action.type) {\n        case NOTE_LIST_REQUEST:\n            return { loading: true, notes: [] }\n\n        case NOTE_LIST_SUCCESS:\n            return { loading: false, notes: action.payload }\n\n        case NOTE_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const noteAddReducer = (state={}, action) => {\n    switch(action.type) {\n        case NOTE_ADD_REQUEST:\n            return { loading: true }\n\n        case NOTE_ADD_SUCCESS:\n            return { loading: false, success: true, note: action.payload }\n\n        case NOTE_ADD_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const noteCompleteReducer = (state={}, action) => {\n    switch(action.type) {\n        case NOTE_COMPLETE_REQUEST:\n            return { loading: true }\n\n        case NOTE_COMPLETE_SUCCESS:\n            return { loading: false, success: true, note: action.payload }\n\n        case NOTE_COMPLETE_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const noteToDeleteReducer = (state={}, action) => {\n    switch(action.type) {\n        case NOTE_TO_DELETE_REQUEST:\n            return { loading: true }\n\n        case NOTE_TO_DELETE_SUCCESS:\n            return { loading: false, success: true, note: action.payload }\n\n        case NOTE_TO_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const noteDeleteReducer = (state={}, action) => {\n    switch(action.type) {\n        case NOTE_DELETE_REQUEST:\n            return { loading: true }\n\n        case NOTE_DELETE_SUCCESS:\n            return { loading: false, success: true, note: action.payload }\n\n        case NOTE_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const noteToEditReducer = (state={}, action) => {\n    switch(action.type) {\n        case NOTE_TO_EDIT_REQUEST:\n            return { loading: true }\n\n        case NOTE_TO_EDIT_SUCCESS:\n            return { loading: false, success: true, noteToEditObj: action.payload }\n\n        case NOTE_TO_EDIT_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const noteEditReducer = (state={}, action) => {\n    switch(action.type) {\n        case NOTE_EDIT_REQUEST:\n            return { loading: true }\n\n        case NOTE_EDIT_SUCCESS:\n            return { loading: false, success: true, note: action.payload }\n\n        case NOTE_EDIT_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL\n} from '../constants/userConstants'\n\nexport const userLoginReducer = (state={}, action) => {\n    switch(action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LOGOUT:\n            return {}\n        \n        default:\n            return state\n    }\n}\n\nexport const userRegisterReducer = (state={}, action) => {\n    switch(action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true }\n\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}","import axios from 'axios'\n\nimport {\n    NOTE_LIST_REQUEST,\n    NOTE_LIST_SUCCESS,\n    NOTE_LIST_FAIL,\n\n    NOTE_ADD_REQUEST,\n    NOTE_ADD_SUCCESS,\n    NOTE_ADD_FAIL,\n\n    NOTE_COMPLETE_REQUEST,\n    NOTE_COMPLETE_SUCCESS,\n    NOTE_COMPLETE_FAIL,\n\n    NOTE_TO_DELETE_REQUEST,\n    NOTE_TO_DELETE_SUCCESS,\n    NOTE_TO_DELETE_FAIL,\n\n    NOTE_DELETE_REQUEST,\n    NOTE_DELETE_SUCCESS,\n    NOTE_DELETE_FAIL,\n\n    NOTE_TO_EDIT_REQUEST,\n    NOTE_TO_EDIT_SUCCESS,\n    NOTE_TO_EDIT_FAIL,\n\n    NOTE_EDIT_REQUEST,\n    NOTE_EDIT_SUCCESS,\n    NOTE_EDIT_FAIL\n} from '../constants/noteConstants'\n\nexport const listNotes = () => async (dispatch, getState) => {\n    try {\n        dispatch({ type: NOTE_LIST_REQUEST })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.get(\n            '/api/',\n            config\n            )\n\n        dispatch({\n            type: NOTE_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NOTE_LIST_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const listImportantNotes = () => async (dispatch, getState) => {\n    try {\n        dispatch({ type: NOTE_LIST_REQUEST })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.get(\n            '/api/important/',\n            config\n            )\n\n        dispatch({\n            type: NOTE_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NOTE_LIST_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const listCompletedNotes = () => async (dispatch, getState) => {\n    try {\n        dispatch({ type: NOTE_LIST_REQUEST })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.get(\n            '/api/completed/',\n            config\n            )\n\n        dispatch({\n            type: NOTE_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NOTE_LIST_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const addNote = (content, important, completed, query, setQuery) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: NOTE_ADD_REQUEST })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const note = {\n            'content': content,\n            'important': important,\n            'completed': completed\n        }\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/create/',\n            note,\n            config\n            )\n\n        dispatch({\n            type: NOTE_ADD_SUCCESS,\n            payload: data\n        })\n\n        dispatch(listNotes())\n        setQuery('all')\n\n    } catch (error) {\n        dispatch({\n            type: NOTE_ADD_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const completeNote = (note_id, query, setQuery) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: NOTE_COMPLETE_REQUEST })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.put(\n            '/api/complete/',\n            note_id,\n            config\n            )\n\n        dispatch({\n            type: NOTE_COMPLETE_SUCCESS,\n            payload: data\n        })\n\n        dispatch(listNotes())\n        setQuery('all')\n\n    } catch (error) {\n        dispatch({\n            type: NOTE_COMPLETE_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const setNoteToDelete = (note_id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: NOTE_TO_DELETE_REQUEST })\n\n        dispatch({\n            type: NOTE_TO_DELETE_SUCCESS,\n            payload: note_id\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NOTE_TO_DELETE_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const deleteNote = (setQuery) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: NOTE_DELETE_REQUEST })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const {\n            noteToDelete: { note }\n        } = getState()\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            '/api/delete/',\n            {data:{\n                note: note,\n                user: userInfo['username']\n            }},\n            config\n            )\n\n        dispatch({\n            type: NOTE_DELETE_SUCCESS,\n            payload: data\n        })\n\n        dispatch(listNotes())\n        setQuery('all')\n\n    } catch (error) {\n        dispatch({\n            type: NOTE_DELETE_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const setNoteToEdit = (note_id, note_content, note_important, note_completed) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: NOTE_TO_EDIT_REQUEST })\n\n        const note = {\n            note_id,\n            note_content,\n            note_important,\n            note_completed\n        }\n\n        dispatch({\n            type: NOTE_TO_EDIT_SUCCESS,\n            payload: note\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NOTE_TO_EDIT_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const editNote = (id, content, important, completed, query, setQuery) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: NOTE_EDIT_REQUEST })\n\n        const {\n            userLogin: { userInfo }\n        } = getState()\n\n        const note = {\n            'id': id,\n            'content': content,\n            'important': important,\n            'completed': completed\n        }\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.access}`\n            }\n        }\n\n        const { data } = await axios.put(\n            '/api/edit/',\n            note,\n            config\n            )\n\n        dispatch({\n            type: NOTE_EDIT_SUCCESS,\n            payload: data\n        })\n\n        dispatch(listNotes())\n        setQuery('all')\n\n    } catch (error) {\n        dispatch({\n            type: NOTE_EDIT_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}","import axios from 'axios'\n\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n} from '../constants/userConstants'\n\nexport const login = (username, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            {'username': username, 'password': password},\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch(error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n        })\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({\n        type: USER_LOGOUT\n    })\n}\n\nexport const register = (username, password, history) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            {'username': username, 'password': password},\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch(login(username, password))\n\n    } catch(error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: 'an account with this username already exists!'\n        })\n        history.push('/register')\n    }\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { logout } from '../actions/userActions'\n\nfunction Navbar() {\n    const dispatch = useDispatch()\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <div>\n            <div className='navbar-custom'>\n                <ul className='navbar-custom-nav'>\n                    <div className='navbar-custom-left'>\n                        <li className='nav-item'>\n                            <a href='/' className='logo-link p-lg'>\n                                <i class=\"fas fa-list-ul logo-icon\"></i> <span className='logo-text'>notepad</span>\n                            </a>\n                        </li>\n                    </div>\n\n                    <div className='navbar-custom-right'>\n                        <li className='nav-item'>\n                            <button onClick={ logoutHandler } className='button-custom button-custom-blue'>logout</button>\n                        </li>\n                    </div>\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default Navbar","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { completeNote, setNoteToDelete, setNoteToEdit } from '../actions/noteActions'\n\nfunction Note({ note, query, setQuery, deleteOpen, setDeleteOpen, editOpen, setEditOpen }) {\n\n    const note_id = note.id\n\n    const dispatch = useDispatch()\n\n    const completeHandler = () => {\n        dispatch(completeNote({ note_id }, query, setQuery))\n    }\n\n    return (\n        <div>\n            {note.important ?\n            <div className='note note-important'>\n                <p>{ note.content }</p>\n                <div className='note-button-container'>\n                    { note.completed\n                        ?<span onClick={ completeHandler }><i class=\"fas fa-check note-button note-button-check-completed\"></i></span>\n                        :<span onClick={ completeHandler }><i class=\"fas fa-check note-button note-button-check\"></i></span>\n                    }\n                    <span onClick={ () => { setEditOpen(!editOpen); dispatch(setNoteToEdit(note.id, note.content, note.important, note.completed)) } }><i class=\"fas fa-edit note-button note-button-edit\"></i></span>\n                    <span onClick={ () => { setDeleteOpen(!deleteOpen); dispatch(setNoteToDelete(note.id))} }><i class=\"far fa-times-circle note-button note-button-x\"></i></span>\n                </div>\n            </div>\n            :\n            <div className='note'>\n                <p>{note.content}</p>\n                <div className='note-button-container'>\n                    { note.completed\n                        ?<span onClick={ completeHandler }><i class=\"fas fa-check note-button note-button-check-completed\"></i></span>\n                        :<span onClick={ completeHandler }><i class=\"fas fa-check note-button note-button-check\"></i></span>\n                    }\n                    <span onClick={ () => { setEditOpen(!editOpen); dispatch(setNoteToEdit(note.id, note.content, note.important, note.completed)) } }><i class=\"fas fa-edit note-button note-button-edit\"></i></span>\n                    <span onClick={ () => { setDeleteOpen(!deleteOpen); dispatch(setNoteToDelete(note.id))} }><i class=\"far fa-times-circle note-button note-button-x\"></i></span>\n                </div>\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default Note","import React, { useState, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { addNote } from '../actions/noteActions'\n\nfunction AddNote({ addOpen, setAddOpen, query, setQuery }) {\n\n    const [note, setNote] = useState('')\n    const [important, setImportant] = useState(false)\n    const [completed, setCompleted] = useState(false)\n    const [emptyNote, setEmptyNote] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (note.length > 0) {\n            dispatch(addNote(\n                note,\n                important,\n                completed,\n                query,\n                setQuery\n            ))\n            setAddOpen(!addOpen)\n        } else {\n            setEmptyNote(true)\n        }\n    }\n\n    return (\n        <div className='popup-container'>\n            <div className='popup-inner-container'>\n                <form onSubmit={ submitHandler }>\n                    { emptyNote && <p className='password-issue'>please add some text to your note!</p> }\n                    <textarea\n                        id='note'\n                        className='custom-input'\n                        rows='4'\n                        maxLength='250'\n                        placeholder='note'\n                        value={ note }\n                        onChange={ (e) => setNote(e.target.value) }>\n                    </textarea>\n\n                    <div>\n                        <p className='form-check-label'>important?</p>\n                        <input\n                            type='checkbox'\n                            id='important'\n                            value={ important }\n                            onChange={ (e) => setImportant(!important) }>\n                        </input>\n                    </div>\n\n                    <div className='form-bottom-buttons'>\n                        <button className='add-cancel' onClick={ () => {setAddOpen(!addOpen)} }><p className='add-cancel-text'>cancel</p></button>\n                        <button type='submit' className='button-custom button-custom-blue'>add</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default AddNote","import React from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { deleteNote } from '../actions/noteActions'\n\nfunction DeletePopup({ deleteOpen, setDeleteOpen, setQuery }) {\n\n    const dispatch = useDispatch()\n\n    const deleteHandler = () => {\n        dispatch(deleteNote(setQuery))\n        setDeleteOpen(false)\n    }\n\n    return(\n        <div className='popup-outer-container-delete'>\n            <div className='popup-container-delete'>\n                <p>are you sure you want to delete this note?</p>\n                <p className='p-sm'>this action is permanent. you can also mark this note as complete.</p>\n                <div className='form-bottom-buttons'>\n                    <button onClick={ () => setDeleteOpen(!deleteOpen) } className='add-cancel add-cancel-red'><p className='cancel-text'>cancel</p></button>\n                    <button onClick={ deleteHandler } className='button-custom button-custom-red'>delete</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default DeletePopup","import React, { useState, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport store from '../store';\n\nimport { editNote } from '../actions/noteActions'\n\nfunction EditNote({ editOpen, setEditOpen, query, setQuery }) {\n\n    const {\n        noteToEdit: { noteToEditObj }\n    } = store.getState()\n\n    const id = noteToEditObj.note_id\n\n    const [content, setContent] = useState(noteToEditObj.note_content)\n    const [important, setImportant] = useState(noteToEditObj.note_important)\n    const [completed, setCompleted] = useState(noteToEditObj.note_completed)\n\n    console.log(important)\n\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(editNote(id, content, important, completed, query, setQuery))\n        setEditOpen(!editOpen)\n    }\n\n\n    return (\n        <div className='popup-outer-container-delete'>\n            <div className='popup-container-delete'>\n                <form onSubmit={ submitHandler }>\n                    <textarea\n                        id='note'\n                        className='custom-input'\n                        rows='4'\n                        maxLength='250'\n                        placeholder='note'\n                        value={ content }\n                        onChange={ (e) => setContent(e.target.value) }>\n                    </textarea>\n\n                    <div>\n                        <p className='form-check-label'>important?</p>\n                        <input\n                            type='checkbox'\n                            id='important'\n                            value={ important }\n                            defaultChecked={ important }\n                            onChange={ (e) => setImportant(!important) }>\n                        </input>\n                    </div>\n\n                    <div>\n                        <p className='form-check-label'>completed?</p>\n                        <input\n                            type='checkbox'\n                            id='completed'\n                            value={ completed }\n                            defaultChecked={ completed }\n                            onChange={ (e) => setCompleted(!completed) }>\n                        </input>\n                    </div>\n\n                    <div className='form-bottom-buttons'>\n                        <button className='add-cancel' onClick={ () => {setEditOpen(!editOpen)} }><p className='add-cancel-text'>cancel</p></button>\n                        <button type='submit' className='button-custom button-custom-blue'>edit</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default EditNote","import React from 'react'\n\nfunction Loader() {\n    return (\n        <div class=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n    )\n}\n\nexport default Loader","import React from 'react'\n\nfunction Error() {\n    return (\n        <div className='popup-container'>\n            <div className='popup-inner-container popup-error'>\n                <p>there was an error loading your notes :( please refresh the page.</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Error","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { listNotes, listImportantNotes, listCompletedNotes } from '../actions/noteActions'\n\nimport Navbar from '../components/Navbar'\nimport Note from '../components/Note'\nimport AddNote from '../components/AddNote'\nimport DeletePopup from '../components/DeletePopup'\nimport EditNote from '../components/EditNote'\nimport Loader from '../components/Loader'\nimport Error from '../components/Error'\n\nfunction HomeScreen({ history }) {\n\n    const [addOpen, setAddOpen] = useState(false)\n    const [deleteOpen, setDeleteOpen] = useState(false)\n    const [editOpen, setEditOpen] = useState(false)\n\n    const [query, setQuery] = useState('all')\n\n    const dispatch = useDispatch()\n    const noteList = useSelector(state => state.noteList)\n    const { error, loading, notes } = noteList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        if (userInfo) {\n            if (query === 'all') {\n                dispatch(listNotes())\n            } else if (query === 'important') {\n                dispatch(listImportantNotes())\n            } else if (query === 'completed') {\n                dispatch(listCompletedNotes())\n            }\n        } else {\n            history.push('/login')\n        }\n    }, [dispatch, userInfo, history, query])\n\n    return (\n        <div>\n            <Navbar />\n            { deleteOpen && <DeletePopup deleteOpen={ deleteOpen } setDeleteOpen={ setDeleteOpen } setQuery={ setQuery } /> }\n            { editOpen && <EditNote editOpen={ editOpen } setEditOpen={ setEditOpen } query={ query } setQuery={ setQuery } /> }\n            { addOpen && <AddNote addOpen={ addOpen } setAddOpen={ setAddOpen } query={ query } setQuery={ setQuery } /> }\n            { loading &&\n                <div className='popup-container'>\n                    <Loader />\n                </div>\n            }\n            { error &&\n                <Error />\n            }\n            <div className='note-container'>\n                <p className='p-lg add-title'>\n                    <button className='button-add-container' onClick={() => {setAddOpen(!addOpen)} }>\n                        <i class=\"fas fa-plus-circle button-add p-lg\"></i>\n                    </button>\n                    add note\n                </p>\n\n                <div className='query-selector-container'>\n                    <span\n                        className={`query-selector ${ query === 'all' ? 'query-selector-active' : ''}`}\n                        onClick={ () => setQuery('all') }>\n                        all\n                    </span>\n                    <span \n                        className={`query-selector ${ query === 'important' ? 'query-selector-active' : ''}`}\n                        onClick={ () => setQuery('important') }>\n                        important\n                    </span>\n                    <span\n                        className={`query-selector ${ query === 'completed' ? 'query-selector-active' : ''}`}\n                        onClick={ () => setQuery('completed') }>\n                        completed\n                    </span>\n                </div>\n\n                {notes.length !== 0 ? notes.map(note => (\n                    <Note key={note.id} note={note} query={ query } setQuery={ setQuery } deleteOpen={ deleteOpen } setDeleteOpen={ setDeleteOpen } setEditOpen={ setEditOpen } editOpen={ editOpen } />\n                ))\n                :\n\n                    <div className='no-note-message'>\n                        { query === 'all' &&\n                            <p>you don't have any notes!</p>\n                        }\n                        { query === 'important' &&\n                            <p>you don't have any important notes!</p>\n                        }\n                        { query === 'completed' &&\n                            <p>you don't have any completed notes!</p>\n                        }\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default HomeScreen","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { login } from '../actions/userActions'\n\nfunction LoginScreen({ history }) {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { loading, userInfo, error } = userLogin\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push('/')\n        }\n    }, [history, userInfo])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(username, password))\n    }\n\n    return (\n        <div className='login-container'>\n            <p className='p-xlg'>\n                <i class=\"fas fa-list-ul logo-icon\"></i> <span className='logo-text'>notepad</span>\n            </p>\n            <p className='p-lg'>login</p>\n\n            { error && <p className='password-issue'>no account found with this username and password!</p> }\n\n            <form className='login-form' onSubmit={ submitHandler }>\n                <input type='text'\n                    id='username'\n                    className='custom-input'\n                    placeholder='username'\n                    value={ username }\n                    onChange={ (e) => setUsername(e.target.value) }>\n                </input>\n                <input type='password'\n                    id='password'\n                    className='custom-input'\n                    placeholder='password'\n                    value={ password }\n                    onChange={ (e) => setPassword(e.target.value) }>\n                </input>\n                <div>\n                    <Link to='/register' className='link create-account-link'>create an account</Link>\n                    <button type='submit' className='button-custom button-custom-blue'>login</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default LoginScreen","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { register } from '../actions/userActions'\n\nimport { USER_REGISTER_RESET } from '../constants/userConstants'\n\nfunction RegisterScreen({ history }) {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [repeatPassword, setRepeatPassword] = useState('')\n\n    const [passwordIssue, setPasswordIssue] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { loading, userInfo, error } = userLogin\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { loading: registerLoading, error: registerError } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push('/')\n        }\n    }, [history, userInfo])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (password === repeatPassword) {\n            dispatch(register(username, password, history))\n            history.push('/')\n        } else {\n            setPasswordIssue(true)\n        } \n    }\n\n    return (\n        <div className='login-container'>\n            <p className='p-xlg'>\n                <i class=\"fas fa-list-ul logo-icon\"></i> <span className='logo-text'>notepad</span>\n            </p>\n            <p className='p-lg'>create an account</p>\n\n            <form className='login-form' onSubmit={ submitHandler }>\n                <input type='text'\n                    id='username'\n                    className='custom-input'\n                    placeholder='username'\n                    value={ username }\n                    onChange={ (e) => setUsername(e.target.value) }>\n                </input>\n                { registerError && <p className='password-issue'>{ registerError }</p> }\n                <input type='password'\n                    id='password'\n                    className='custom-input'\n                    placeholder='password'\n                    value={ password }\n                    onChange={ (e) => setPassword(e.target.value) }>\n                </input>\n                <input type='password'\n                    id='repeat-password'\n                    className='custom-input'\n                    placeholder='repeat password'\n                    value={ repeatPassword }\n                    onChange={ (e) => setRepeatPassword(e.target.value) }>\n                </input>\n                { passwordIssue && <p className='password-issue'>your passwords don't match!</p> }\n                <div>\n                    <Link to='/login' className='link create-account-link'>login</Link>\n                    <button type='submit' className='button-custom button-custom-blue'>register</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default RegisterScreen","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport HomeScreen from './screens/HomeScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\n\nfunction App() {\n  return (\n    <Router>\n      <Route path='/' component={HomeScreen} exact />\n      <Route path='/login' component={LoginScreen} />\n      <Route path='/register' component={RegisterScreen} />\n    </Router>\n  );\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux'\n\nimport store from './store'\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}